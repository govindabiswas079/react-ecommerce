[{"F:\\ecommerce\\appprem\\src\\index.js":"1","F:\\ecommerce\\appprem\\src\\App.js":"2","F:\\ecommerce\\appprem\\src\\components\\products\\Products.jsx":"3","F:\\ecommerce\\appprem\\src\\components\\products\\product\\Product.jsx":"4","F:\\ecommerce\\appprem\\src\\components\\products\\product\\styles.js":"5","F:\\ecommerce\\appprem\\src\\components\\Navbar\\Navbar.jsx":"6","F:\\ecommerce\\appprem\\src\\components\\Navbar\\styles.js":"7","F:\\ecommerce\\appprem\\src\\components\\Products\\Products.jsx":"8","F:\\ecommerce\\appprem\\src\\components\\Products\\Product\\Product.jsx":"9","F:\\ecommerce\\appprem\\src\\components\\Products\\Product\\styles.js":"10","F:\\ecommerce\\appprem\\src\\components\\index.js":"11","F:\\ecommerce\\appprem\\src\\components\\Products\\styles.js":"12","F:\\ecommerce\\appprem\\src\\components\\products\\styles.js":"13","F:\\ecommerce\\appprem\\src\\lib\\commerce.js":"14","F:\\ecommerce\\appprem\\src\\components\\Cart\\Cart.jsx":"15","F:\\ecommerce\\appprem\\src\\components\\Cart\\styles.js":"16","F:\\ecommerce\\appprem\\src\\components\\Cart\\CartItem\\CartItem.jsx":"17","F:\\ecommerce\\appprem\\src\\components\\Cart\\CartItem\\styles.js":"18","F:\\ecommerce\\appprem\\src\\components\\CheckoutForm\\Checkout\\Checkout.jsx":"19","F:\\ecommerce\\appprem\\src\\components\\CheckoutForm\\Checkout\\styles.js":"20","F:\\ecommerce\\appprem\\src\\components\\CheckoutForm\\AddressForm.jsx":"21","F:\\ecommerce\\appprem\\src\\components\\CheckoutForm\\PaymentForm.jsx":"22","F:\\ecommerce\\appprem\\src\\components\\CheckoutForm\\CustomTextField.jsx":"23","F:\\ecommerce\\appprem\\src\\components\\CheckoutForm\\Review.jsx":"24"},{"size":147,"mtime":1606532260000,"results":"25","hashOfConfig":"26"},{"size":2704,"mtime":1606532260000,"results":"27","hashOfConfig":"26"},{"size":688,"mtime":1606532260000,"results":"28","hashOfConfig":"26"},{"size":1239,"mtime":1606532260000,"results":"29","hashOfConfig":"26"},{"size":396,"mtime":1606532260000,"results":"30","hashOfConfig":"26"},{"size":2123,"mtime":1611858639885,"results":"31","hashOfConfig":"26"},{"size":1565,"mtime":1606532260000,"results":"32","hashOfConfig":"26"},{"size":688,"mtime":1606532260000,"results":"33","hashOfConfig":"26"},{"size":1239,"mtime":1606532260000,"results":"34","hashOfConfig":"26"},{"size":396,"mtime":1606532260000,"results":"35","hashOfConfig":"26"},{"size":232,"mtime":1606532260000,"results":"36","hashOfConfig":"26"},{"size":287,"mtime":1606532260000,"results":"37","hashOfConfig":"26"},{"size":287,"mtime":1606532260000,"results":"38","hashOfConfig":"26"},{"size":126,"mtime":1606532260000,"results":"39","hashOfConfig":"26"},{"size":1760,"mtime":1606532260000,"results":"40","hashOfConfig":"26"},{"size":570,"mtime":1606532260000,"results":"41","hashOfConfig":"26"},{"size":1400,"mtime":1606532260000,"results":"42","hashOfConfig":"26"},{"size":333,"mtime":1606532260000,"results":"43","hashOfConfig":"26"},{"size":3117,"mtime":1606532260000,"results":"44","hashOfConfig":"26"},{"size":1158,"mtime":1606532260000,"results":"45","hashOfConfig":"26"},{"size":4592,"mtime":1606532260000,"results":"46","hashOfConfig":"26"},{"size":2404,"mtime":1611843601396,"results":"47","hashOfConfig":"26"},{"size":533,"mtime":1606532260000,"results":"48","hashOfConfig":"26"},{"size":892,"mtime":1606532260000,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"jfqid6",{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"54"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"54"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"54"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"F:\\ecommerce\\appprem\\src\\index.js",[],"F:\\ecommerce\\appprem\\src\\App.js",[],["102","103"],"F:\\ecommerce\\appprem\\src\\components\\products\\Products.jsx",[],"F:\\ecommerce\\appprem\\src\\components\\products\\product\\Product.jsx",[],"F:\\ecommerce\\appprem\\src\\components\\products\\product\\styles.js",[],"F:\\ecommerce\\appprem\\src\\components\\Navbar\\Navbar.jsx",[],"F:\\ecommerce\\appprem\\src\\components\\Navbar\\styles.js",[],"F:\\ecommerce\\appprem\\src\\components\\Products\\Products.jsx",[],"F:\\ecommerce\\appprem\\src\\components\\Products\\Product\\Product.jsx",[],"F:\\ecommerce\\appprem\\src\\components\\Products\\Product\\styles.js",[],"F:\\ecommerce\\appprem\\src\\components\\index.js",[],"F:\\ecommerce\\appprem\\src\\components\\Products\\styles.js",[],"F:\\ecommerce\\appprem\\src\\components\\products\\styles.js",[],"F:\\ecommerce\\appprem\\src\\lib\\commerce.js",[],"F:\\ecommerce\\appprem\\src\\components\\Cart\\Cart.jsx",["104"],"import React from 'react';\r\nimport { Container, Typography, Button, Grid } from '@material-ui/core';\r\nimport useStyles from './styles.js';\r\nimport CartItem from './CartItem/CartItem';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Cart = ({ cart, handleUpdateCartQty, handleRemoveFromCart, handleEmptyCart }) => {\r\n    const classes = useStyles();\r\n    //const isEmpty = !cart.line_items.length;\r\n\r\n    const EmptyCart = () => (\r\n        <Typography variant=\"subtitle1\">You Have No Items In Your Shopping Cart\r\n            <Link to=\"/\" className={classes.link}>\r\n                Start Adding Some!\r\n            </Link>\r\n        </Typography>\r\n    );\r\n\r\n    const FilledCart = () => (\r\n        <>\r\n            <Grid container spacing={3}>\r\n                {cart.line_items.map((item) => {\r\n                    <Grid xs={12} sm={4} key={item.id}>\r\n                        {/* <div>{item.name}</div> */}\r\n                        < CartItem inet={item} onUpdateCartQty={handleUpdateCartQty} onRemoveFromCart={handleRemoveFromCart} />\r\n                    </Grid>\r\n                })}\r\n            </Grid>\r\n            <div className={classes.cardDetails}>\r\n                <Typography variant=\"h4\">Subtotal: {cart.subtotal.formatted_with_symbol}</Typography>\r\n                <div>\r\n                    <Button className={classes.emptyButton} size=\"large\" type=\"button\" variant=\"contained\" color=\"secondary\" onClick={handleEmptyCart}>Empty Cart</Button>\r\n                    <Button component={Link} to=\"/checkout\" className={classes.checkoutButton} size=\"large\" type=\"button\" variant=\"contained\" color=\"primary\">Checkout</Button>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n\r\n    if (!cart.line_items) return 'Loading...';\r\n    return (\r\n        <Container>\r\n            <div className={classes.toolbar} />\r\n            <Typography className={classes.title} variant=\"h3\">Your Shopping Cart</Typography>\r\n            { !cart.line_items.length ? <EmptyCart /> : <FilledCart />}\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Cart;","F:\\ecommerce\\appprem\\src\\components\\Cart\\styles.js",[],"F:\\ecommerce\\appprem\\src\\components\\Cart\\CartItem\\CartItem.jsx",[],"F:\\ecommerce\\appprem\\src\\components\\Cart\\CartItem\\styles.js",[],"F:\\ecommerce\\appprem\\src\\components\\CheckoutForm\\Checkout\\Checkout.jsx",["105"],"import React, { useState, useEffect } from 'react'\nimport { CssBaseline, Paper, Stepper, Step, StepLabel, Typography, CircularProgress, Divider, Button } from '@material-ui/core';\nimport { Link, useHistory } from 'react-router-dom';\nimport useStyles from './styles';\nimport AddressForm from '../AddressForm';\nimport PaymentForm from '../PaymentForm';\nimport { commerce } from '../../../lib/commerce';\n\nconst steps = ['Shipping address', 'Payment details'];\n\nconst Checkout = ({ cart, order, onCaptureCheckout, error }) => {\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = useState(0);\n  const [checkoutToken, setCheckoutToken] = useState(null);\n  const [shippingData, setShippingData] = useState({});\n  const [isFinished, setIsFinished] = useState(false);\n  const history = useHistory();\n\n  useEffect(() => {\n    const generateToken = async () => {\n      try {\n        const token = await commerce.checkout.generateToken(cart.id, { type: 'cart' });\n\n        setCheckoutToken(token);\n      } catch (error) {\n        history.pushState('/');\n      }\n    }\n    generateToken();\n  }, [cart]);\n\n  const nextStep = () => setActiveStep((prevActiveStep) => prevActiveStep + 1);\n  const backStep = () => setActiveStep((prevActiveStep) => prevActiveStep - 1);\n\n\n  const next = (data) => {\n    setShippingData(data);\n\n    nextStep();\n  };\n\n  const timeout = () => {\n    setTimeout(() => {\n      setIsFinished(true);\n    }, 3000);\n  }\n\n  let Confirmation = () => order.customer ? (\n    <>\n      <div>\n        <Typography variant=\"h5\">Thank you for your purchase, {order.customer.firstname} {order.customer.lastname}!</Typography>\n        <Divider className={classes.divider} />\n        <Typography variant=\"subtitle2\">Order ref: {order.customer_reference}</Typography>\n      </div>\n      <br />\n      <Button component={Link} to=\"/\" variant=\"outlined\" type=\"button\">Back to home</Button>\n    </>\n  ) : isFinished ? (\n    <>\n      <div>\n        <Typography variant=\"h5\">Thank you for your purchase</Typography>\n        <Divider className={classes.divider} />\n      </div>\n      <br />\n      <Button component={Link} to=\"/\" variant=\"outlined\" type=\"button\">Back to home</Button>\n    </>\n  ) : (\n        <div className={classes.spinner}>\n          <CircularProgress />\n        </div>\n      );\n\n  if (error) {\n    Confirmation = () => (\n      <>\n        <Typography variant=\"h5\">Error: {error}</Typography>\n        <br />\n        <Button component={Link} variant=\"outlined\" type=\"button\" to=\"/\">Back to home</Button>\n      </>\n    );\n  }\n\n  const Form = () => activeStep === 0\n    ? <AddressForm checkoutToken={checkoutToken} next={next} />\n    : <PaymentForm shippingData={shippingData} checkoutToken={checkoutToken} backStep={backStep} nextStep={nextStep} onCaptureCheckout={onCaptureCheckout} timeout={timeout} />\n\n\n  return (\n    <>\n      <CssBaseline />\n      <div className={classes.toolbar} />\n      <main className={classes.layout}>\n        <Paper className={classes.paper}>\n          <Typography variant=\"h4\" align=\"center\">Checkout</Typography>\n          <Stepper activeStep={0} className={classes.stepper}>\n            {steps.map((label) => (\n              <Step key={label}>\n                <StepLabel>{label}</StepLabel>\n              </Step>\n            ))}\n          </Stepper>\n          {activeStep === steps.length ? <Confirmation /> : checkoutToken && <Form />}\n        </Paper>\n      </main>\n    </>\n  );\n};\n\nexport default Checkout;","F:\\ecommerce\\appprem\\src\\components\\CheckoutForm\\Checkout\\styles.js",[],"F:\\ecommerce\\appprem\\src\\components\\CheckoutForm\\AddressForm.jsx",["106","107","108"],"import React, { useState, useEffect } from 'react';\r\nimport { InputLabel, Select, MenuItem, Button, Grid, Typography } from '@material-ui/core';\r\nimport { useForm, FormProvider } from 'react-hook-form';\r\nimport FormInput from './CustomTextField';\r\nimport { commerce } from '../../lib/commerce';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst AddressForm = ({ checkoutToken, next }) => {\r\n    const [shippingCountries, setShippingCountries] = useState([]);\r\n    const [shippingCountry, setShippingCountry] = useState('');\r\n    const [shippingSubdivisions, setShippingSubdivisions] = useState([]);\r\n    const [shippingSubdivision, setShippingSubdivision] = useState('');\r\n    const [shippingOptions, setShippingOptions] = useState([]);\r\n    const [shippingOption, setShippingOption] = useState('');\r\n    const method = useForm();\r\n\r\n    const countries = Object.entries(shippingCountries).map(([code, name]) => ({ id: code, lable: name }));\r\n    //console.log(countries);\r\n    const subdivisions = Object.entries(shippingSubdivisions).map(([code, name]) => ({ id: code, lable: name }));\r\n    const options = shippingOptions.map((sO) => ({ id: sO.id, lable: `${sO.description} - (${sO.price.formatted_with_symbol})` }))\r\n    //console.log(shippingOptions);\r\n\r\n    const fetchShippingCountries = async (checkoutTokenId) => {\r\n        const { countries } = await commerce.services.localeListShippingCountries(checkoutTokenId);\r\n\r\n        setShippingCountries(countries);\r\n        setShippingCountry(Object.keys(countries)[0]);\r\n    };\r\n\r\n    const fetchSubdivisions = async (countryCode) => {\r\n        const { subdivisions } = await commerce.services.localeListSubdivisions(countryCode);\r\n\r\n        setShippingSubdivisions(subdivisions);\r\n        setShippingSubdivision(Object.keys(subdivisions)[0]);\r\n    };\r\n\r\n    const fetchShippingOptions = async (checkoutTokenId, country, region = null) => {\r\n        const option = await commerce.checkout.getShippingOptions(checkoutTokenId, { country, region });\r\n\r\n        setShippingOptions(options);\r\n        setShippingOption(options[0].id);\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchShippingCountries(checkoutToken.id)\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (shippingCountry) fetchSubdivisions(shippingCountry);\r\n    }, [shippingCountry]);\r\n\r\n    useEffect(() => {\r\n        if (shippingSubdivision) fetchShippingOptions(checkoutToken.id, shippingCountry, shippingSubdivision);\r\n    }, [shippingSubdivision]);\r\n\r\n    return (\r\n        <>\r\n            <Typography variant=\"h6\" gutterBottom>Shipping address</Typography>\r\n            <FormProvider {...method}>\r\n                <form onSubmit={method.handleSubmit((data) => next({ ...data, shippingCountry, shippingSubdivision, shippingOption }))}>\r\n                    <Grid container spacing={3}>\r\n                        <FormInput name=\"firstName\" label=\"First name\" />\r\n                        <FormInput name=\"lastName\" label=\"Last name\" />\r\n                        <FormInput name=\"address1\" label=\"Address line 1\" />\r\n                        <FormInput name=\"email\" label=\"Email\" />\r\n                        <FormInput name=\"city\" label=\"City\" />\r\n                        <FormInput name=\"zip\" label=\"Zip / Postal code\" />\r\n\r\n                        <Grid item xs={12} sm={6}>\r\n                            <InputLabel>Shipping Country</InputLabel>\r\n                            <Select value={shippingCountry} fullWidth onChange={(e) => setShippingCountry(e.target.value)}>\r\n                                {countries.map((country) => (\r\n                                    <MenuItem key={country.id} value={country.id}>\r\n                                        {country.lable}\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12} sm={6}>\r\n                            <InputLabel>Shipping Subdivision</InputLabel>\r\n                            <Select value={shippingSubdivision} fullWidth onChange={(e) => setShippingSubdivision(e.target.value)}>\r\n                                {subdivisions.map((subdivision) => (\r\n                                    <MenuItem key={subdivision.id} value={subdivision.id}>\r\n                                        {subdivision.lable}\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12} sm={6}>\r\n                            <InputLabel>Shipping Options</InputLabel>\r\n                            <Select value={shippingOption} fullWidth onChange={(e) => setShippingOption(e.target.value)}>\r\n                                {options.map((option) => (\r\n                                    <MenuItem key={option.id} value={option.id}>\r\n                                        {option.lable}\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <br />\r\n                    <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                        <Button component={Link} to=\"/cart\" variant=\"outlined\">Back to Cart</Button>\r\n                        <Button type=\"submit\" variant=\"contained\" color=\"primary\">Next</Button>\r\n                    </div>\r\n                </form>\r\n            </FormProvider>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AddressForm;","F:\\ecommerce\\appprem\\src\\components\\CheckoutForm\\PaymentForm.jsx",[],"F:\\ecommerce\\appprem\\src\\components\\CheckoutForm\\CustomTextField.jsx",[],"F:\\ecommerce\\appprem\\src\\components\\CheckoutForm\\Review.jsx",[],{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","severity":1,"message":"114","line":22,"column":45,"nodeType":"115","messageId":"116","endLine":22,"endColumn":47},{"ruleId":"117","severity":1,"message":"118","line":30,"column":6,"nodeType":"119","endLine":30,"endColumn":12,"suggestions":"120"},{"ruleId":"121","severity":1,"message":"122","line":38,"column":15,"nodeType":"123","messageId":"124","endLine":38,"endColumn":21},{"ruleId":"117","severity":1,"message":"125","line":46,"column":8,"nodeType":"119","endLine":46,"endColumn":10,"suggestions":"126"},{"ruleId":"117","severity":1,"message":"127","line":54,"column":8,"nodeType":"119","endLine":54,"endColumn":29,"suggestions":"128"},"no-native-reassign",["129"],"no-negated-in-lhs",["130"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["131"],"no-unused-vars","'option' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'checkoutToken.id'. Either include it or remove the dependency array.",["132"],"React Hook useEffect has missing dependencies: 'checkoutToken.id', 'fetchShippingOptions', and 'shippingCountry'. Either include them or remove the dependency array.",["133"],"no-global-assign","no-unsafe-negation",{"desc":"134","fix":"135"},{"desc":"136","fix":"137"},{"desc":"138","fix":"139"},"Update the dependencies array to be: [cart, history]",{"range":"140","text":"141"},"Update the dependencies array to be: [checkoutToken.id]",{"range":"142","text":"143"},"Update the dependencies array to be: [checkoutToken.id, fetchShippingOptions, shippingCountry, shippingSubdivision]",{"range":"144","text":"145"},[1100,1106],"[cart, history]",[2177,2179],"[checkoutToken.id]",[2446,2467],"[checkoutToken.id, fetchShippingOptions, shippingCountry, shippingSubdivision]"]